import type { Chain, WalletClient } from '@wagmi/core';
import { Connector } from '@wagmi/core';
import { W3mFrameProvider } from '@web3modal/wallet';
interface W3mFrameProviderOptions {
    projectId: string;
}
interface Config {
    chains?: Chain[];
    options: W3mFrameProviderOptions;
}
interface ConnectOptions {
    chainId?: number;
}
export declare class EmailConnector extends Connector<W3mFrameProvider, W3mFrameProviderOptions> {
    readonly id = "w3mEmail";
    readonly name = "Web3Modal Email";
    readonly ready = true;
    private provider;
    constructor(config: Config);
    getProvider(): Promise<W3mFrameProvider>;
    connect(options?: ConnectOptions): Promise<{
        account: `0x${string}`;
        chain: {
            id: number;
            unsupported: boolean;
        };
    }>;
    switchChain(chainId: number): Promise<Chain>;
    disconnect(): Promise<void>;
    getAccount(): Promise<`0x${string}`>;
    getChainId(): Promise<number>;
    getWalletClient(): Promise<WalletClient>;
    isAuthorized(): Promise<boolean>;
    onAccountsChanged(): void;
    onChainChanged(): void;
    onDisconnect(): void;
}
export {};
